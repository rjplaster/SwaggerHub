/**
 * BenefitsWorkstation GroupBenefitsApi Services
 * <table style=\"float: left;\"> <tbody>   <tr>     <td colspan=\"2\">     <h3><strong>Overview:</strong></h3>     <p>Collection of Operations for accessing the Group Benefits Platform - Benefits Workstation.</p>     <h3><strong>Implementation Notes:</strong></h3>     <ul>       <li>Wherever possible REGEX expressions are provided to assist in validation</li>       </li>     </ul>     </td>   </tr>   <tr>     <td colspan=\"2\">     <h3><strong>Authentication:</strong></h3>     <ul>       <li>API is secured through Basic Auth scheme utilizing Windows NTLM users/groups</li>     </td>   </tr> </tbody> </table>
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bwappsupport@nreca.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Individual participant that meets search criteria. 
 */
export interface Participant { 
    /**
     * Participant's Correlation Id (CID).  Unique identifier for an NRECA Individual used to identify and correlate the Individual's identity across systems that may utilize differing keys or methods to identify individuals.  The format is a 9 character alphanumeric string value.
     */
    cid: string;
    /**
     * The cooperative subgroup of which this Individual is a member.
     */
    subgroupId: string;
    /**
     * A given name or the name that occurs first in a given name.
     */
    firstName: string;
    /**
     * The name used to identify the members of a family.
     */
    lastName: string;
    /**
     * Participant's Social Security Number (SSN).
     */
    ssn: string;
    /**
     * Participant's Date of Birth (DOB).
     */
    dateOfBirth: Date;
    /**
     * A list of Participant search status codes that are used to search for Participants. When NULL is provided, ALL Participant search statuses will be searched. * `A`  Active * `D`  Disabled * `L`  Leave * `TM` Terminated * `RT` Retired * `X`  Deceased * `CB`  COBRA (includes Non-Employees)
     */
    participantStatusCode?: Participant.ParticipantStatusCodeEnum;
    /**
     * Code representing the state of being married. * `S` Single * `D` Divorced * `M` Married * `W` Widow 
     */
    maritalStatusCode?: Participant.MaritalStatusCodeEnum;
}
export namespace Participant {
    export type ParticipantStatusCodeEnum = 'A' | 'D' | 'L' | 'TM' | 'RT' | 'X' | 'CB';
    export const ParticipantStatusCodeEnum = {
        A: 'A' as ParticipantStatusCodeEnum,
        D: 'D' as ParticipantStatusCodeEnum,
        L: 'L' as ParticipantStatusCodeEnum,
        TM: 'TM' as ParticipantStatusCodeEnum,
        RT: 'RT' as ParticipantStatusCodeEnum,
        X: 'X' as ParticipantStatusCodeEnum,
        CB: 'CB' as ParticipantStatusCodeEnum
    };
    export type MaritalStatusCodeEnum = 'D' | 'M' | 'S' | 'W';
    export const MaritalStatusCodeEnum = {
        D: 'D' as MaritalStatusCodeEnum,
        M: 'M' as MaritalStatusCodeEnum,
        S: 'S' as MaritalStatusCodeEnum,
        W: 'W' as MaritalStatusCodeEnum
    };
}